<UserControl x:Class="Tourplaner.TourSelectionScreenView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Tourplaner"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:core="clr-namespace:System;assembly=mscorlib"
             xmlns:models="clr-namespace:Tourplaner.Models"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ObjectDataProvider x:Key="routeTypeEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="models:RouteType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBox x:Name="FilterText"
                     Width="200"
                     HorizontalAlignment="Left"
                     Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}"
                     materialDesign:HintAssist.Hint="Filter"
                     materialDesign:HintAssist.IsFloating="True"
                     materialDesign:TextFieldAssist.HasClearButton="True"
                     Margin="0,5,0,25" Grid.Row="0">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="TextChanged">
                    <i:CallMethodAction MethodName="HandleFilterTextChanged" TargetObject="{Binding}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>

        <DataGrid x:Name="TourSelectionGrid" CanUserSortColumns="False" CanUserAddRows="False" AutoGenerateColumns="False" IsReadOnly="False" ItemsSource="{Binding TourView}" Grid.Row="1">
            <DataGrid.Columns>
                <DataGridCheckBoxColumn Header="{Binding MarkedColumnHeader}" Binding="{Binding IsMarked, UpdateSourceTrigger=PropertyChanged}">
                    <DataGridCheckBoxColumn.HeaderTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.CheckAllChecked}">
                                <CheckBox.Content>Mark All</CheckBox.Content>

                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked">
                                        <i:CallMethodAction MethodName="ApplyCheckAll" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unchecked">
                                        <i:CallMethodAction MethodName="ApplyUncheckAll" TargetObject="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                        </DataTemplate>
                    </DataGridCheckBoxColumn.HeaderTemplate>
                </DataGridCheckBoxColumn>
                
                <DataGridTextColumn Header="Name" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="From" Binding="{Binding From, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="To" Binding="{Binding To, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridComboBoxColumn Header="Route Type" SelectedItemBinding="{Binding SelectedRouteType, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Source={StaticResource routeTypeEnum}}"/>
                <DataGridTextColumn Header="Log Count" Binding="{Binding TourLogCount}" IsReadOnly="True" />
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
